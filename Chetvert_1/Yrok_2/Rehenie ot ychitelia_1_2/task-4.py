# 4.	Создать список, содержащий цены на товары (10 – 20 товаров), например:
# [57.8, 46.51, 97, ...]
# A.	Вывести на экран эти цены через запятую в одну строку,
#  цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
#  Подумать, как из цены получить рубли и копейки, как добавить нули,
#  если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# B.	Вывести цены, отсортированные по возрастанию, новый список не создавать
#        (доказать, что объект списка после сортировки остался тот же).
# C.	Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# D.	Вывести цены пяти самых дорогих товаров.
#        Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?


lst = [57.8, 46.40, 97, 12.3, 67.54, 8.07, 982.12]
for cost in lst:
    cost_rub = int(cost)
    cost_coin = round((cost-cost_rub)*100)
    # Можно формировать необходимое кол-во нулей руками и это хорошо для тренировки
##    if 0 < cost_coin < 10:
##        cost_coin_tmp = f"0{cost_coin}"
##    elif cost_coin == 0:
##        cost_coin_tmp = f"00"
##    else:
##        cost_coin_tmp = f"{cost_coin}"
##    print(f"{cost_rub} руб {cost_coin_tmp} коп", end=", ")
    # А можно воспользоваться автоформатированием и это лаконично
    print(f"{cost_rub} руб {cost_coin:02d} коп", end=", ")
print("\nДоказательство операции in place:")
print(f"\tid перед сортировкой {id(lst)}")
lst.sort()
print(f"\tid после сортировки {id(lst)}")
# Здесь алгоритм вывода, полностью аналогичный предыдущему
lst_descending = list(reversed(lst))
print("5 самых дорогих товаров:")
for cost in lst_descending[:5]:
    print(f"\t{cost}")
