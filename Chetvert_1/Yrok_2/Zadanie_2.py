# 2. Дан список строк. Например: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была',
# '+5', 'градусов'].Строки-элементы могут содержать цифры, обозначающие часы/минуты/секунды;
# могут начинаться со знаков + или - и обозначают температуры: "+5", "-7"; могут быть просто символьными строками.
# Необходимо обработать список: обособить каждое целое число кавычками (добавить строку-кавычку до и после
# элемента списка, являющегося числом) и дополнить это число нулём до двух целочисленных разрядов, Т.е. результат
# примера: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была',
# '"', '+05', '"', 'градусов']. Сформировать из обработанного списка строку вида: 'в "05" часов "17" минут
# температура воздуха была "+05" градусов' и вывести ее на экран.
#
# Формат вывода результата:
# Исходный, результирующий список и строку выводим на экран через print.
#
# Примеры/Тесты:
# Исходный список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Новый список + добавление элементов-кавычек:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"',
# '+05', '"', 'градусов']
#
# Исходный список:
# ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была',
# '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Новый список + добавление элементов-кавычек:
# ['примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', 'секунд',
# 'температура', 'воздуха', 'была', '"', '-05', '"', 'градусов Цельсия', 'темп', 'воды',
# '"', '+12', '"', 'градусов', 'Цельсия']
#
# Техническое задание
# Список может содержать произвольное кол-во элементов.
# строки-слова это любые строки.
# строки-числа для времени: одна или две цифры, без привязки к ограничениям на 60 минут/секунд и 24 часа.
# Т.е. '79', 'минут' - это корректно.
# строки-числа для температуры: любое целое число. В начале может быть знак плюс или минус, но может и не быть.
# в начале и конце строк-чисел пробелов нет.
# строки-числа и строки-слова не обязательно идут точно через один. см пример 2.
# Формируя результирующую строку, обратите внимание на отсутствие "лишних" пробелов около кавычек,
# например "08" минут - правильно, а " 08 " минут - неправильно.
#
# Примечание:
# Регулярные выражения не используем. Учимся парсить строку самостоятельно.
#
# Алгоритм
# Сколько проходов по списку вам понадобится? Достаточно одного прохода.
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
# Как модифицировать это условие для чисел со знаком? Это первый шаг - парсить строку-число
# и добавлять нули по необходимости.
#
# Задание упрощенное
# Если у вас не получается добавить правильно элементы-кавычки - упростим задачу.
# Обработайте строки-числа в соответствии с условием задачи и вставьте кавычки прямо в эту же строку.
# Т.е. вы меняете элементы списка, не добавляя новых элементов.
#
# Задание повышенной сложности (задание со звездочкой)
# Не создавайте новый список. Это называется решить in place. Измените существующий список,
# добавив элементы-кавычки в соответствии с условием задачи. Эта задача намного серьезнее,
# чем может сначала показаться.

spisok_n = ['Примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха',
            'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия.']
spisok_red = []
stroka_fin = ''

for spisok in spisok_n:
    if spisok[-1].isdigit() == True:
        spisok_red.append('"')
        chislo_c = (int(spisok)) // 10
        chislo_d = (int(spisok)) % 10
        if chislo_c <= 0 and spisok.find('0') != 0:
            srez_n = spisok[:-1]
            srez_k = spisok[-1]
            lepim = srez_n + '0' + srez_k
            spisok_red.append(lepim)
            stroka_fin = stroka_fin + '"' + str(lepim) + '"' + ' '
        elif chislo_d == 0 and spisok.find('0') == 0:
            srez_n = spisok[:-1]
            srez_k = spisok[-1]
            lepim = srez_n + '0' + srez_k
            spisok_red.append(lepim)
            stroka_fin = stroka_fin + '"' + str(lepim) + '"' + ' '
        else:
            spisok_red.append(spisok)
            stroka_fin = stroka_fin + '"' + str(spisok) + '"' + ' '
        spisok_red.append('"')
    else:
        spisok_red.append(spisok)
        stroka_fin = stroka_fin + str(spisok) + ' '

print(spisok_n)
print(spisok_red)
print(stroka_fin)
