# 4. [Задача со звездочкой]: усложненный вариант задания 3. Написать функцию thesaurus_adv(),
# принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь,
# в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме предыдущего задания
# и содержащие записи, в которых фамилия начинается с соответствующей буквы.
#
# Техническое задание
# Количество передаваемых строк в функцию может быть любым. Считаем, что переданы будут только корректные строки.
# Вернуть словарь, с ключами, отсортированными в алфавитном порядке.
#
# Примеры/Тесты:
#
# >>> thesaurus\_adv("Иван Сергеев", "Алла Сидорова", "Инна Серова",
#            "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Василий Суриков")
# {
#    'А':{
#           'П': ['Петр Алексеев']},
#    'И': {
#           'И': ['Илья Иванов']},
#    'С': {
#           'А': ['Алла Сидорова', 'Анна Савельева'],
#           'В': ['Василий Суриков'],
#           'И': ['Иван Сергеев', 'Инна Серова']}}

def thesaurus(imia_n):
    baza_imen = {}
    spisok_sot = imia_n.split(' ')
    for spisok_so in spisok_sot:
        srez_n = spisok_so.upper()[0]
        srez_k = f'{srez_n}{spisok_so[1:]}'
        if baza_imen.get(srez_n) != None:
            srez_nk = baza_imen.setdefault(srez_n, srez_k)
            baza_imen[srez_n] = f'{srez_nk} {srez_k}'
        else:
            baza_imen[srez_n] = srez_k
    for baza_im in baza_imen.keys():
        baza_imen[baza_im] = baza_imen[baza_im].split()
    print(baza_imen)

imia_n = input('Введите имена сотрудников через пробел: ')
thesaurus(imia_n)
