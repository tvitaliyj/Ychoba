# 5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов,
# взятых из трёх заданных списков:
#
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
#
# Техническое задание
# Функция должна вернуть список строк-шуток.
# В списках nouns, adverbs, adjectives не обязательно одинакое количество элементов.
# Они могут быть произвольной длины.
# Проверьте работу функции для кол-ва шуток больше, чем длины списков слов и меньше.
# Сделайте вызов функции как с позиционными аргументами, так и с именованными.
# Документируйте код функции.
#
# Примеры/Тесты:
#
# >>> get\_jokes(3, nouns, adverbs, adjectives)
# ['автомобиль ночью мягкий', 'лес сегодня утопичный', 'дом вчера зеленый']
# >>> get\_jokes(5, nouns, adverbs, adjectives)
# ['автомобиль вчера зеленый',
#  'дом ночью мягкий',
#  'огонь ночью утопичный',
#  'дом позавчера зеленый',
#  'город вчера утопичный']
# >>>

def get_jokes(number):
    import random
    nouns = ["автомобиль", "лес", "огонь", "город", "дом", "озеро", "ветер", "река"]
    adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью", "днём", "вечером", "утром"]
    adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий", "грустный", "жёсткий", "тёмный"]
    chytki_k = []

    number_z = 1
    while number_z <= number:
        number_a = random.randint(0, 7)
        number_b = random.randint(0, 7)
        number_c = random.randint(0, 7)
        stroka_r = f'{nouns[number_a]} {adverbs[number_b]} {adjectives[number_c]}'
        chytki_k.append(stroka_r)
        number_z += 1
    print(chytki_k)


number = int(input('Введите количество шуток которое хотите получить: '))
get_jokes(number)
