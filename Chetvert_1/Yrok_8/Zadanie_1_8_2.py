# 2. [Задача со звездочкой]: усложненный вариант задания 1. Написать регулярное выражение для парсинга файла логов web-сервера из ДЗ 6 урока nginx_logs.txt
# Техническое задание:
#
# Лог файл: https://github.com/elastic/examples/raw/master/Common%20Data%20Formats/nginx_logs/nginx_logs
# Функция парсинга строки лог-файла:
# Принимает аргумент - строку (по шаблону из лог-файла)
# возвращает кортеж из 6 элементов вида: (<remote_addr>, <request_datetime>, <request_type>, <requested_resource>, <response_code>, <response_size>)
# Вы можете не обращать внимание на IPv6
# Проверьте работоспособность функции на нескольких строках лог файла.
# Распарсите весь файл и выведите на экран список всех IP, без повторений.
# Примеры/Тесты:
#
#
# raw = '188.138.60.101 - - [17/May/2015:08:05:49 +0000] "GET /downloads/product_2 HTTP/1.1" 304 0 "-" "Debian APT-HTTP/1.3 (0.9.7.9)"'
# parsed_raw = ('188.138.60.101', '17/May/2015:08:05:49 +0000', 'GET', '/downloads/product_2', '304', '0')
#
# Усложнение:
#
# Ваша функция должна корректно обрабатывать как IPv4, так и IPv6 - найдите их в логе.
# Посмотрите спецификацию IPv6. Что такое шестнадцатеричное число и какие буквы/цифры оно может включать. Сколько их может быть в IPv6.
# Совсем хорошо, если вы обработаете cокращенные адреса IPv6, которые тоже в логе есть. Это не обязательно.
# Ваш шаблон должен пропускать только то, что нужно, не используйте «избыточно широкие» шаблоны.
